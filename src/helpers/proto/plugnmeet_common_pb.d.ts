// @generated by protoc-gen-es v0.0.10 with parameter "target=js+dts"
// @generated from file plugnmeet_common.proto (package plugnmeet, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3 } from '@bufbuild/protobuf';
import type {
  Codec,
  ParticipantInfo,
  TrackInfo,
} from './github.com/livekit/protocol@v1.0.0/livekit_models_pb.js';

/**
 * @generated from message plugnmeet.CommonNotifyEvent
 */
export declare class CommonNotifyEvent extends Message<CommonNotifyEvent> {
  /**
   * @generated from field: optional string event = 1;
   */
  event?: string;

  /**
   * @generated from field: optional plugnmeet.NotifyEventRoom room = 2;
   */
  room?: NotifyEventRoom;

  /**
   * @generated from field: optional livekit.ParticipantInfo participant = 3;
   */
  participant?: ParticipantInfo;

  /**
   * @generated from field: optional plugnmeet.RecordingInfoEvent recording_info = 4;
   */
  recordingInfo?: RecordingInfoEvent;

  /**
   * @generated from field: optional livekit.TrackInfo track = 6;
   */
  track?: TrackInfo;

  /**
   * @generated from field: optional string id = 7;
   */
  id?: string;

  /**
   * @generated from field: optional int64 created_at = 8;
   */
  createdAt?: bigint;

  constructor(data?: PartialMessage<CommonNotifyEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'plugnmeet.CommonNotifyEvent';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): CommonNotifyEvent;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): CommonNotifyEvent;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): CommonNotifyEvent;

  static equals(
    a: CommonNotifyEvent | PlainMessage<CommonNotifyEvent> | undefined,
    b: CommonNotifyEvent | PlainMessage<CommonNotifyEvent> | undefined,
  ): boolean;
}

/**
 * @generated from message plugnmeet.NotifyEventRoom
 */
export declare class NotifyEventRoom extends Message<NotifyEventRoom> {
  /**
   * @generated from field: optional string sid = 1;
   */
  sid?: string;

  /**
   * @generated from field: optional string room_id = 2;
   */
  roomId?: string;

  /**
   * @generated from field: optional uint32 empty_timeout = 3;
   */
  emptyTimeout?: number;

  /**
   * @generated from field: optional uint32 max_participants = 4;
   */
  maxParticipants?: number;

  /**
   * @generated from field: optional uint64 creation_time = 5;
   */
  creationTime?: bigint;

  /**
   * @generated from field: repeated livekit.Codec enabled_codecs = 6;
   */
  enabledCodecs: Codec[];

  /**
   * @generated from field: optional string metadata = 7;
   */
  metadata?: string;

  /**
   * @generated from field: optional uint32 num_participants = 8;
   */
  numParticipants?: number;

  constructor(data?: PartialMessage<NotifyEventRoom>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'plugnmeet.NotifyEventRoom';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): NotifyEventRoom;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): NotifyEventRoom;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): NotifyEventRoom;

  static equals(
    a: NotifyEventRoom | PlainMessage<NotifyEventRoom> | undefined,
    b: NotifyEventRoom | PlainMessage<NotifyEventRoom> | undefined,
  ): boolean;
}

/**
 * @generated from message plugnmeet.RecordingInfoEvent
 */
export declare class RecordingInfoEvent extends Message<RecordingInfoEvent> {
  /**
   * @generated from field: string record_id = 1;
   */
  recordId: string;

  /**
   * @generated from field: string recorder_id = 2;
   */
  recorderId: string;

  /**
   * @generated from field: string recorder_msg = 3;
   */
  recorderMsg: string;

  /**
   * @generated from field: optional string file_path = 4;
   */
  filePath?: string;

  /**
   * @generated from field: optional float file_size = 5;
   */
  fileSize?: number;

  constructor(data?: PartialMessage<RecordingInfoEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'plugnmeet.RecordingInfoEvent';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): RecordingInfoEvent;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): RecordingInfoEvent;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): RecordingInfoEvent;

  static equals(
    a: RecordingInfoEvent | PlainMessage<RecordingInfoEvent> | undefined,
    b: RecordingInfoEvent | PlainMessage<RecordingInfoEvent> | undefined,
  ): boolean;
}
