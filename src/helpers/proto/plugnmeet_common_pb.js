// @generated by protoc-gen-es v0.0.10 with parameter "target=js+dts"
// @generated from file plugnmeet_common.proto (package plugnmeet, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {proto3} from "@bufbuild/protobuf";
import {Codec, ParticipantInfo, TrackInfo} from "./github.com/livekit/protocol@v1.0.0/livekit_models_pb.js";

/**
 * @generated from message plugnmeet.CommonNotifyEvent
 */
export const CommonNotifyEvent = proto3.makeMessageType(
  "plugnmeet.CommonNotifyEvent",
  () => [
    { no: 1, name: "event", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "room", kind: "message", T: NotifyEventRoom, opt: true },
    { no: 3, name: "participant", kind: "message", T: ParticipantInfo, opt: true },
    { no: 4, name: "recording_info", kind: "message", T: RecordingInfoEvent, opt: true },
    { no: 6, name: "track", kind: "message", T: TrackInfo, opt: true },
    { no: 7, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "created_at", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
  ],
);

/**
 * @generated from message plugnmeet.NotifyEventRoom
 */
export const NotifyEventRoom = proto3.makeMessageType(
  "plugnmeet.NotifyEventRoom",
  () => [
    { no: 1, name: "sid", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "room_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "empty_timeout", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "max_participants", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "creation_time", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 6, name: "enabled_codecs", kind: "message", T: Codec, repeated: true },
    { no: 7, name: "metadata", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "num_participants", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ],
);

/**
 * @generated from message plugnmeet.RecordingInfoEvent
 */
export const RecordingInfoEvent = proto3.makeMessageType(
  "plugnmeet.RecordingInfoEvent",
  () => [
    { no: 1, name: "record_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "recorder_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "recorder_msg", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "file_path", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "file_size", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ],
);

